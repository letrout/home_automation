
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

alarm_control_panel:
  - platform: manual
    name: "Home Alarm"
    code: ""
    arming_time: 30
    delay_time: 20
    trigger_time: 4
    disarmed:
      trigger_time: 0
    armed_home:
      arming_time: 0
      delay_time: 0

automation:
- alias: 'Trigger alarm while armed away'
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      to: "active"
  condition:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: armed_away
  action:
    service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm

sensor:
  - platform: mqtt
    state_topic: "Owens/sensors/mbr/door/temp_F"
    name: Master "BR temperature"
    unit_of_measurement: 'F'

  - platform: mqtt
    state_topic: "Owens/sensors/mbr/door/rel_humidity"
    name: Master BR humidity
    unit_of_measurement: '%'   

  - platform: mqtt
    state_topic: "Owens/sensors/basement/dc/temp_F"
    name: Basement DC temperature
    unit_of_measurement: 'F'

  - platform: mqtt
    state_topic: "Owens/sensors/basement/dc/rel_humidity"
    name: Basement DC humidity
    unit_of_measurement: '%'
 
  - platform: mqtt
    state_topic: "Owens/sensors/garage/back/temp_F"
    name: Garage temperature
    unit_of_measurement: 'F'

  - platform: mqtt
    state_topic: "Owens/sensors/garage/back/rel_humidity"
    name: Garage humidity
    unit_of_measurement: '%'

  - platform: mqtt
    state_topic: "Owens/sensors/mbr/door/PM1.0_std"
    name: Master BR PM1.0
    unit_of_measurement: 'ug/m3'

  - platform: mqtt
    state_topic: "Owens/sensors/mbr/door/PM2.5_std"
    name: Master BR PM2.5
    unit_of_measurement: 'ug/m3'

  - platform: mqtt
    state_topic: "Owens/sensors/mbr/door/PM10.0_std"
    name: Master BR PM10.0
    unit_of_measurement: 'ug/m3'

binary_sensor:
  - platform: mqtt
    state_topic: "influx/Owens/events/#"
    name: "Garage side door"
    payload_on: 1
    payload_off: 0
    qos: 0
    device_class: door
    value_template: >
      {% if value.split(',')[2].split('=')[1] == 'garage' and value.split(',')[3].split('=')[1] == 'side' %}
        {{ value.split(' ')[1].split('=')[1] }}
      {% endif %}

  - platform: mqtt
    state_topic: "influx/Owens/events/#"
    name: Front door
    payload_on: 1
    payload_off: 0
    qos: 0
    device_class: door
    value_template: >
      {% if value.split(',')[2].split('=')[1] == 'library' and value.split(',')[3].split('=')[1] == 'front' %}
        {{ value.split(' ')[1].split('=')[1] }}
      {% endif %}

  - platform: mqtt
    state_topic: "influx/Owens/events/#"
    name: Back door
    payload_on: 1
    payload_off: 0
    qos: 0
    device_class: door
    value_template: >
      {% if value.split(',')[2].split('=')[1] == 'mud' and value.split(',')[3].split('=')[1] == 'back' %}
        {{ value.split(' ')[1].split('=')[1] }}
      {% endif %}

  - platform: mqtt
    state_topic: "influx/Owens/events/#"
    name: Kitchen door
    payload_on: 1
    payload_off: 0
    qos: 0
    device_class: door
    value_template: >
      {% if value.split(',')[2].split('=')[1] == 'kitchen' and value.split(',')[3].split('=')[1] == 'deck' %}
        {{ value.split(' ')[1].split('=')[1] }}
      {% endif %}
